#!/bin/bash

source tools/_functions

set -e

build_env="local"

if [[ "$1" != "" ]];
	then
	build_env="$1"
fi

heading "Checking Environment"

missing_env=""

while IFS='' read -r env_var || [[ -n "$env_var" ]]; do
	env_var="$(echo -e "${env_var}" | tr -d '[[:space:]]')"
	if [[ "$env_var" != "" ]]; then
		if [[ "$build_env" == "local" ]]; then

			if grep -q "^ *$env_var=.\+" "src/.env.$build_env"; then
				echo "$env_var: exists"
			else

				env_val=""

				while [[ "$env_val" == "" ]]; do
					echo -n "Required ENV var [$env_var]: "
					read env_val </dev/tty
				done

				sed -i "" "s/^ *${env_var}=.*$/${env_var}=${env_val}/g" "src/.env.$build_env"

			fi

		elif [[ "$build_env" == "production" ]]; then
			if grep -q "^ *$env_var=.\+" "/home/deploy/.env"; then
				echo "$env_var: exists"
			else
				missing_env="${missing_env}\n${env_var}"
			fi
		fi
	fi
done < "tools/_env_required"

if [[ "$missing_env" != "" ]]; then
	echo -e "Missing ENV vars:${missing_env}"
	exit 1
fi
